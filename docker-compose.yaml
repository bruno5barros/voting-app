version: '3'

services:
  db:
    image: postgres:16.4-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=root
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine3.20
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py setup_periodic_tasks &&
        python manage.py setup_voting_locker &&
        python manage.py runserver 0.0.0.0:8000
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  celery:
    build: .
    volumes:
      - ./app:/app
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
      app:
        condition: service_healthy
    command: celery -A lunch_voting worker -l info

  celery-beat:
    build: .
    volumes:
      - ./app:/app
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
      app:
        condition: service_healthy
    command: celery -A lunch_voting beat --loglevel=info
    
networks:
  default:
    driver: bridge